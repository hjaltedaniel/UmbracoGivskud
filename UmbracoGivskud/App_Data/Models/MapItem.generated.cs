//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Map Item</summary>
	[PublishedContentModel("MapItem")]
	public partial class MapItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "MapItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MapItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MapItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Category
		///</summary>
		[ImplementPropertyType("category")]
		public IPublishedContent Category
		{
			get { return this.GetPropertyValue<IPublishedContent>("category"); }
		}

		///<summary>
		/// Content Text
		///</summary>
		[ImplementPropertyType("contentText")]
		public IHtmlString ContentText
		{
			get { return this.GetPropertyValue<IHtmlString>("contentText"); }
		}

		///<summary>
		/// Icon
		///</summary>
		[ImplementPropertyType("icon")]
		public IPublishedContent Icon
		{
			get { return this.GetPropertyValue<IPublishedContent>("icon"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Latitude Postion
		///</summary>
		[ImplementPropertyType("latitudePostion")]
		public string LatitudePostion
		{
			get { return this.GetPropertyValue<string>("latitudePostion"); }
		}

		///<summary>
		/// Link to video
		///</summary>
		[ImplementPropertyType("linkToVideo")]
		public string LinkToVideo
		{
			get { return this.GetPropertyValue<string>("linkToVideo"); }
		}

		///<summary>
		/// Longitude Position
		///</summary>
		[ImplementPropertyType("longitudePosition")]
		public string LongitudePosition
		{
			get { return this.GetPropertyValue<string>("longitudePosition"); }
		}

		///<summary>
		/// Map Position: Drag the picker to the desired map location for your single item
		///</summary>
		[ImplementPropertyType("mapPosition")]
		public object MapPosition
		{
			get { return this.GetPropertyValue("mapPosition"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}
	}
}
