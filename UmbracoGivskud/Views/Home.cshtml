@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.Home>
    @using ContentModels = Umbraco.Web.PublishedContentModels;
    @{
    Layout = "MasterTemplate.cshtml";
    }
    @{ 
        var eventItems = Model.Content.Site().Descendants<EventItem>();
        var activityItems = Model.Content.Site().Descendants<ActivityItem>().OrderBy(x => x.GetPropertyValue<DateTime>("StartTime")); ;
        var newsItems = Model.Content.Site().Descendants<NewsItem>();
        DateTime today = DateTime.Now;
    }

<body class="landing-body">

    <div id="map" class="map"></div>
    <main class="landing-page-main">
        <div class="weather-gradient"></div>
        <div class="container">
            <section id="weather">
            </section>
            <div class="blank-space"></div>
            <section id="landingpage-nodes">
                @foreach (var item in activityItems)
                {
                    foreach (var day in item.DaysHappening.ToList())
                    {
                        var timeUntil = item.StartTime.Hour - today.Hour;
                        if (day.Name == today.DayOfWeek.ToString() && timeUntil > 0)
                        {
                            <a href="~/today/?date=@DateTime.Now.ToString("dd-MM-yy")" class="node-link">
                                <article class="landing-node">
                                    <div class="node-text">
                                        <div class="node-header">
                                            <h2>@item.Title</h2>
                                            <i>@item.StartTime.ToString("HH:mm") | in @timeUntil hours</i>
                                        </div>
                                        <p>@item.ActivitySummary</p>
                                    </div>
                                    <img class="node-image" src="@item.GetCropUrl("image", "FeedItemSquare")">
                                </article>
                            </a>
                        }
                    }

                }
                @foreach (var item in eventItems)
                {
                    if (today.Date >= item.StartTime.Date && today.Date <= item.EndTime.Date)
                    {
                        <a href="@item.Url" class="node-link">
                            <article class="landing-node">
                                <div class="node-text">
                                    <div class="node-header">
                                        <h2>@item.Title</h2>
                                        <i>All day</i>
                                    </div>
                                    <p>@item.EventSummary</p>
                                </div>
                                <img class="node-image" src="@item.GetCropUrl("image", "FeedItemSquare")">
                            </article>
                        </a>
                    }
                }
                @foreach (var item in newsItems.Take(1))
                {
                        <a href="@item.Url" class="node-link">
                            <article class="landing-node">
                                <div class="node-text">
                                    <div class="node-header">
                                        <h2>@item.Title</h2>
                                    </div>
                                    <p>@item.NewsSummary</p>
                                </div>
                                <img class="node-image" src="@item.GetCropUrl("image", "FeedItemSquare")">
                            </article>
                        </a>
                }
            </section>
        </div>
    </main>
    <script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>
    <script src="~/assets/js/jquery.mobile.custom/jquery.mobile.custom.min.js"></script>
    @Umbraco.RenderMacro("GetWeatherData")
    <script src="~/assets/js/LandingPage.js"></script>
    <script type="text/javascript">
        // Defining the map and standard location (Latitude / Longitude) and zoom level
        // var map = L.map('map').setView([55.81139, 9.35229], 16);

        var map = L.map('map', {
            center: [55.81139, 9.35229],
            zoom: 16,
            zoomControl: false,
        });

        // Defining the tile layer (in this case we use OpenStreetMaps' standard layer)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
            maxZoom: 19,
            minZoom: 15,
        }).addTo(map);

        // Click on map
        map.on('click', function() {
            window.location.href = '/live-map';
        });

        // movestart
        map.on('movestart', function() {
            window.location.href = '/live-map';
        });

        // touchstart
        map.on('touchstart', function () {
            window.location.href = '/live-map';
        });

        // zoomstart
        map.on('zoomstart', function() {
            window.location.href = '/live-map';
        });

    </script>
</body>